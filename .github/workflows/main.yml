name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  build:
    env:
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: 17
          cache: 'gradle'

      - name: Build with Gradle
        id: build
        # run: |
        #   ./gradlew createIliModelsXml addXslDeclaration createConfigDataXml 
        #   ls -la
        run: |
          ./gradlew createIliModelsXml createIliModelsHtml createConfigDataXml 
          ls -la

      - name: Build and start Docker container
        run: ./gradlew buildImage startContainer 
        if: ${{ success() }}

      - name: Test repository
        id: repocheck
        run: ./gradlew checkInterlisRepository 
        if: ${{ success() }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Multi-platform build and push
        run: ./gradlew buildAndPushImages
        if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT && (steps.repocheck.outcome == 'success')}}